Index: app/src/main/java/com/example/myapplication/Login.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\n\r\npublic class Login extends AppCompatActivity {\r\n    Button createAccountBtn, loginBtn, forgetpasswordbtn;\r\n    EditText username, password;\r\n    FirebaseAuth fireAuth;\r\n    AlertDialog.Builder reset;\r\n    LayoutInflater inflater;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        createAccountBtn = findViewById(R.id.createbtn);\r\n        createAccountBtn.setOnClickListener(new View.OnClickListener(){\r\n\r\n            @Override\r\n            public void onClick(View v) {\r\n                startActivity(new Intent(getApplicationContext(), Register.class));\r\n            }\r\n        });\r\n        //text field\r\n        username = findViewById(R.id.loginEmail);\r\n        password = findViewById(R.id.loginpassword);\r\n\r\n        //buttons\r\n        loginBtn = findViewById(R.id.signinbtn);\r\n        forgetpasswordbtn = findViewById(R.id.forgetPassword);\r\n        //reset forgotten password\r\n        reset = new AlertDialog.Builder(this);\r\n        inflater = this.getLayoutInflater();\r\n        //firebase user\r\n        // added comment//\r\n        //dialog for reset password\r\n        forgetpasswordbtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                final View view = inflater.inflate(R.layout.reset_forgot,null);\r\n                reset.setTitle(\"Reset because of Forgotten Password\")\r\n                        .setMessage(\"Enter email to get Your Password reset link\")\r\n                        .setPositiveButton(\"Reset\", new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialog, int which) {\r\n                                EditText email = view.findViewById(R.id.reset_email);\r\n                                if(email.getText().toString().isEmpty()){\r\n                                    email.setError(\"Email is Required\");\r\n                                }\r\n                                fireAuth.sendPasswordResetEmail(email.getText().toString()).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n                                        Toast.makeText(Login.this,\"Reset Password Email sent\",Toast.LENGTH_SHORT).show();\r\n                                    }\r\n                                }).addOnFailureListener(new OnFailureListener() {\r\n                                    @Override\r\n                                    public void onFailure(@NonNull Exception e) {\r\n                                        Toast.makeText(Login.this,e.getMessage(),Toast.LENGTH_SHORT).show();\r\n                                    }\r\n                                });\r\n                            }\r\n                        }).setNegativeButton(\"Cancel\", null).\r\n                        setView(view).\r\n                        create().show();\r\n\r\n            }\r\n        });\r\n\r\n        loginBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(username.getText().toString().isEmpty()){\r\n                    username.setError(\"Email Field is empty\");\r\n                }\r\n                if(password.getText().toString().isEmpty()){\r\n                    password.setError(\"Password Field is empty\");\r\n                }\r\n\r\n                //login user\r\n                fireAuth.signInWithEmailAndPassword(username.getText().toString(), password.getText().toString())\r\n                        .addOnSuccessListener(new OnSuccessListener<AuthResult>() {\r\n                            @Override\r\n                            public void onSuccess(AuthResult authResult) {\r\n                                //login successful\r\n                                startActivity(new Intent(getApplicationContext(),MainActivity.class));\r\n                                finish();\r\n                            }\r\n                        }).addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Toast.makeText(Login.this,e.getMessage(),Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    //if user already registered and logged in before no need to keep asking them for info\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        if(FirebaseAuth.getInstance().getCurrentUser() != null){\r\n            startActivity(new Intent(getApplicationContext(),MainActivity.class));\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/myapplication/Login.java	(revision 1d1e488aba03ceb3d79fdd061335de17f6324b57)
+++ app/src/main/java/com/example/myapplication/Login.java	(date 1619970886461)
@@ -50,7 +50,6 @@
         //reset forgotten password
         reset = new AlertDialog.Builder(this);
         inflater = this.getLayoutInflater();
-        //firebase user
         // added comment//
         //dialog for reset password
         forgetpasswordbtn.setOnClickListener(new View.OnClickListener() {
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"29.0.2\"\r\n    defaultConfig {\r\n        applicationId \"com.example.myapplication\"\r\n        minSdkVersion 16\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n\r\n\r\n        multiDexEnabled true\r\n\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.multidex:multidex:2.0.1'\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'com.google.android.material:material:1.3.0'\r\n    implementation 'androidx.annotation:annotation:1.1.0'\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'\r\n    implementation 'androidx.navigation:navigation-fragment:2.2.2'\r\n    implementation 'androidx.navigation:navigation-ui:2.2.2'\r\n    // Import the BoM for the Firebase platform\r\n    dependencies {\r\n        // ...\r\n        implementation 'com.android.support.constraint:constraint-layout:2.0.4'\r\n        // Import the Firebase BoM\r\n        implementation platform('com.google.firebase:firebase-bom:27.1.0')\r\n\r\n        // When using the BoM, you don't specify versions in Firebase library dependencies\r\n\r\n        // Declare the dependencies for the desired Firebase products\r\n        // For example, declare the dependencies for Firebase Authentication and Cloud Firestore\r\n        implementation 'com.google.firebase:firebase-auth'\r\n        implementation 'com.google.firebase:firebase-firestore'\r\n    }\r\n\r\n\r\n\r\n    // Declare the dependency for the Firebase Authentication library\r\n    // When using the BoM, you don't specify versions in Firebase library dependencies\r\n\r\n    implementation 'com.google.android.gms:play-services-auth:19.0.0'\r\n    implementation 'com.google.android.gms:play-services-location:18.0.0'\r\n    implementation 'com.google.android.gms:play-services-maps:17.0.1'\r\n\r\n\r\n    // Declare the dependency for the Firebase Authentication library\r\n    // When NOT using the BoM, you must specify versions in Firebase library dependencies\r\n\r\n\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 1d1e488aba03ceb3d79fdd061335de17f6324b57)
+++ app/build.gradle	(date 1619969455053)
@@ -36,6 +36,7 @@
     implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
     implementation 'androidx.navigation:navigation-fragment:2.2.2'
     implementation 'androidx.navigation:navigation-ui:2.2.2'
+    implementation 'com.google.firebase:firebase-auth:20.0.4'
     // Import the BoM for the Firebase platform
     dependencies {
         // ...
