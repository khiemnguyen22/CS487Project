Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\n\r\nandroid {\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    compileSdkVersion 28\r\n    buildToolsVersion \"29.0.2\"\r\n    defaultConfig {\r\n        applicationId \"com.example.myapplication\"\r\n        minSdkVersion 16\r\n        targetSdkVersion 28\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n\r\n\r\n        multiDexEnabled true\r\n\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.multidex:multidex:2.0.1'\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'com.google.android.material:material:1.3.0'\r\n    implementation 'androidx.annotation:annotation:1.1.0'\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'\r\n    implementation 'androidx.navigation:navigation-fragment:2.2.2'\r\n    implementation 'androidx.navigation:navigation-ui:2.2.2'\r\n    implementation 'com.google.firebase:firebase-auth:20.0.4'\r\n    implementation 'com.google.android.gms:play-services-maps:17.0.1'\r\n    implementation 'com.google.android.gms:play-services-location:18.0.0'\r\n    implementation 'com.google.android.gms:play-services-places:17.0.0'\r\n\r\n\r\n    // Import the BoM for the Firebase platform\r\n\r\n    dependencies {\r\n        // ...\r\n        implementation 'com.android.support.constraint:constraint-layout:2.0.4'\r\n        // Import the Firebase BoM\r\n        implementation platform('com.google.firebase:firebase-bom:27.1.0')\r\n\r\n        // When using the BoM, you don't specify versions in Firebase library dependencies\r\n\r\n        // Declare the dependencies for the desired Firebase products\r\n        // For example, declare the dependencies for Firebase Authentication and Cloud Firestore\r\n        implementation 'com.google.firebase:firebase-auth'\r\n        implementation 'com.google.firebase:firebase-firestore'\r\n        implementation 'com.google.maps:google-maps-services:0.18.0'\r\n        testImplementation group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.5'\r\n        implementation 'com.squareup.okhttp3:okhttp:3.12.x'\r\n    }\r\n\r\n\r\n\r\n    // Declare the dependency for the Firebase Authentication library\r\n    // When using the BoM, you don't specify versions in Firebase library dependencies\r\n\r\n    implementation 'com.google.android.gms:play-services-auth:19.0.0'\r\n    implementation 'com.google.android.gms:play-services-location:18.0.0'\r\n    implementation 'com.google.android.gms:play-services-maps:17.0.1'\r\n\r\n    // Declare the dependency for the Firebase Authentication library\r\n    // When NOT using the BoM, you must specify versions in Firebase library dependencies\r\n\r\n\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 1e343c96754fb0f22357d139496c846c3ad36e78)
+++ app/build.gradle	(date 1620192591332)
@@ -44,6 +44,8 @@
     implementation 'com.google.android.gms:play-services-maps:17.0.1'
     implementation 'com.google.android.gms:play-services-location:18.0.0'
     implementation 'com.google.android.gms:play-services-places:17.0.0'
+    implementation 'com.google.android.libraries.places:places:2.4.0'
+
 
 
     // Import the BoM for the Firebase platform
Index: app/src/main/java/com/example/myapplication/MapsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication;\r\n\r\n\r\nimport android.Manifest;\r\nimport android.content.pm.PackageManager;\r\nimport android.location.Location;\r\nimport android.os.Bundle;\r\n\r\nimport android.util.Log;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.android.gms.location.LocationServices;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\n\r\n\r\npublic class MapsActivity extends AppCompatActivity implements OnMapReadyCallback, GoogleMap.OnMyLocationButtonClickListener,\r\n        GoogleMap.OnMyLocationClickListener{\r\n\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap) {\r\n        Toast.makeText(this, \"Map is Ready\", Toast.LENGTH_SHORT).show();\r\n        Log.d(TAG, \"onMapReady: map is ready\");\r\n        mMap = googleMap;\r\n\r\n        if (mLocationPermissionsGranted) {\r\n            getDeviceLocation();\r\n\r\n            if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)\r\n                    != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this,\r\n                    Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n                return;\r\n            }\r\n            mMap.setMyLocationEnabled(true);\r\n\r\n            mMap.setOnMyLocationButtonClickListener(this);\r\n            mMap.setOnMyLocationClickListener(this);\r\n\r\n        }\r\n    }\r\n\r\n    private static final String TAG = \"MapActivity\";\r\n\r\n    private static final String FINE_LOCATION = Manifest.permission.ACCESS_FINE_LOCATION;\r\n    private static final String COURSE_LOCATION = Manifest.permission.ACCESS_COARSE_LOCATION;\r\n    private static final int LOCATION_PERMISSION_REQUEST_CODE = 1234;\r\n    private static final float DEFAULT_ZOOM = 15f;\r\n\r\n    //vars\r\n    private Boolean mLocationPermissionsGranted = false;\r\n    private GoogleMap mMap;\r\n    private FusedLocationProviderClient mFusedLocationProviderClient;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_maps);\r\n\r\n\r\n        getLocationPermission();\r\n    }\r\n\r\n    private void getDeviceLocation(){\r\n        Log.d(TAG, \"getDeviceLocation: getting the devices current location\");\r\n\r\n        mFusedLocationProviderClient = LocationServices.getFusedLocationProviderClient(this);\r\n\r\n        try{\r\n            if(mLocationPermissionsGranted){\r\n\r\n                final Task location = mFusedLocationProviderClient.getLastLocation();\r\n                location.addOnCompleteListener(new OnCompleteListener() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task task) {\r\n                        if(task.isSuccessful()){\r\n                            Log.d(TAG, \"onComplete: found location!\");\r\n                            Location currentLocation = (Location) task.getResult();\r\n\r\n                            moveCamera(new LatLng(currentLocation.getLatitude(), currentLocation.getLongitude()),\r\n                                    DEFAULT_ZOOM);\r\n\r\n                        }else{\r\n                            Log.d(TAG, \"onComplete: current location is null\");\r\n                            Toast.makeText(MapsActivity.this, \"unable to get current location\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }catch (SecurityException e){\r\n            Log.e(TAG, \"getDeviceLocation: SecurityException: \" + e.getMessage() );\r\n        }\r\n    }\r\n\r\n    private void moveCamera(LatLng latLng, float zoom){\r\n        Log.d(TAG, \"moveCamera: moving the camera to: lat: \" + latLng.latitude + \", lng: \" + latLng.longitude );\r\n        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, zoom));\r\n    }\r\n\r\n    private void initMap(){\r\n        Log.d(TAG, \"initMap: initializing map\");\r\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.map);\r\n\r\n        mapFragment.getMapAsync(MapsActivity.this);\r\n    }\r\n\r\n    private void getLocationPermission(){\r\n        Log.d(TAG, \"getLocationPermission: getting location permissions\");\r\n        String[] permissions = {Manifest.permission.ACCESS_FINE_LOCATION,\r\n                Manifest.permission.ACCESS_COARSE_LOCATION};\r\n\r\n        if(ContextCompat.checkSelfPermission(this.getApplicationContext(),\r\n                FINE_LOCATION) == PackageManager.PERMISSION_GRANTED){\r\n            if(ContextCompat.checkSelfPermission(this.getApplicationContext(),\r\n                    COURSE_LOCATION) == PackageManager.PERMISSION_GRANTED){\r\n                mLocationPermissionsGranted = true;\r\n                initMap();\r\n            }else{\r\n                ActivityCompat.requestPermissions(this,\r\n                        permissions,\r\n                        LOCATION_PERMISSION_REQUEST_CODE);\r\n            }\r\n        }else{\r\n            ActivityCompat.requestPermissions(this,\r\n                    permissions,\r\n                    LOCATION_PERMISSION_REQUEST_CODE);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        Log.d(TAG, \"onRequestPermissionsResult: called.\");\r\n        mLocationPermissionsGranted = false;\r\n\r\n        switch(requestCode){\r\n            case LOCATION_PERMISSION_REQUEST_CODE:{\r\n                if(grantResults.length > 0){\r\n                    for(int i = 0; i < grantResults.length; i++){\r\n                        if(grantResults[i] != PackageManager.PERMISSION_GRANTED){\r\n                            mLocationPermissionsGranted = false;\r\n                            Log.d(TAG, \"onRequestPermissionsResult: permission failed\");\r\n                            return;\r\n                        }\r\n                    }\r\n                    Log.d(TAG, \"onRequestPermissionsResult: permission granted\");\r\n                    mLocationPermissionsGranted = true;\r\n                    //initialize our map\r\n                    initMap();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public boolean onMyLocationButtonClick() {\r\n        Toast.makeText(this, \"MyLocation button clicked\", Toast.LENGTH_SHORT)\r\n                .show();\r\n\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public void onMyLocationClick(@NonNull Location location) {\r\n        Toast.makeText(this, \"Current location:\\n\" + location, Toast.LENGTH_LONG)\r\n                .show();\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/myapplication/MapsActivity.java	(revision 1e343c96754fb0f22357d139496c846c3ad36e78)
+++ app/src/main/java/com/example/myapplication/MapsActivity.java	(date 1620192519390)
@@ -15,8 +15,10 @@
 import androidx.core.app.ActivityCompat;
 import androidx.core.content.ContextCompat;
 
+import com.google.android.gms.common.api.Status;
 import com.google.android.gms.location.FusedLocationProviderClient;
 import com.google.android.gms.location.LocationServices;
+
 import com.google.android.gms.maps.CameraUpdateFactory;
 import com.google.android.gms.maps.GoogleMap;
 import com.google.android.gms.maps.OnMapReadyCallback;
@@ -24,6 +26,13 @@
 import com.google.android.gms.maps.model.LatLng;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
+import com.google.android.libraries.places.api.model.Place;
+import com.google.android.libraries.places.widget.AutocompleteSupportFragment;
+import com.google.android.libraries.places.widget.listener.PlaceSelectionListener;
+
+import org.jetbrains.annotations.NotNull;
+
+import java.util.Arrays;
 
 
 public class MapsActivity extends AppCompatActivity implements OnMapReadyCallback, GoogleMap.OnMyLocationButtonClickListener,
@@ -67,8 +76,25 @@
     protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_maps);
+        AutocompleteSupportFragment autocompleteFragment = (AutocompleteSupportFragment)
+                getSupportFragmentManager().findFragmentById(R.id.autocomplete_fragment);
+
+        // Specify the types of place data to return.
+        autocompleteFragment.setPlaceFields(Arrays.asList(Place.Field.ID, Place.Field.NAME));
 
+        // Set up a PlaceSelectionListener to handle the response.
+        autocompleteFragment.setOnPlaceSelectedListener(new PlaceSelectionListener() {
+            @Override
+            public void onPlaceSelected(@NonNull @NotNull Place place) {
+                Log.i(TAG, "Place: " + place.getName() + ", " + place.getId());
 
+            }
+
+            @Override
+            public void onError(@NonNull @NotNull Status status) {
+                Log.i(TAG, "An error occurred: " + status);
+            }
+        });
         getLocationPermission();
     }
 
Index: app/src/main/res/layout/activity_maps.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"/>\r\n\r\n    <EditText\r\n        android:id=\"@+id/editText\"\r\n        android:layout_width=\"248dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"8dp\"\r\n        android:layout_marginLeft=\"8dp\"\r\n        android:layout_toEndOf=\"@+id/searchbtn\"\r\n        android:layout_toRightOf=\"@+id/searchbtn\"\r\n        android:layout_weight=\"0.5\"\r\n        android:hint=\"Search Destination\"\r\n        android:inputType=\"textPersonName\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/searchbtn\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"0.5\"\r\n        android:text=\"Find Uber\"\r\n        tools:ignore=\"OnClick\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/map\"\r\n        android:name=\"com.google.android.gms.maps.SupportMapFragment\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"526dp\"\r\n        android:layout_below=\"@+id/searchbtn\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_marginTop=\"4dp\"\r\n        android:layout_marginBottom=\"25dp\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/searchbtn\"\r\n        tools:context=\".MapsActivity\" />\r\n\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_maps.xml	(revision 1e343c96754fb0f22357d139496c846c3ad36e78)
+++ app/src/main/res/layout/activity_maps.xml	(date 1620193014518)
@@ -2,44 +2,27 @@
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    xmlns:app="http://schemas.android.com/apk/res-auto">
+    android:layout_height="match_parent">
 
     <LinearLayout
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:orientation="horizontal"/>
-
-    <EditText
-        android:id="@+id/editText"
-        android:layout_width="248dp"
-        android:layout_height="wrap_content"
-        android:layout_marginStart="8dp"
-        android:layout_marginLeft="8dp"
-        android:layout_toEndOf="@+id/searchbtn"
-        android:layout_toRightOf="@+id/searchbtn"
-        android:layout_weight="0.5"
-        android:hint="Search Destination"
-        android:inputType="textPersonName" />
-
-    <Button
-        android:id="@+id/searchbtn"
-        android:layout_width="wrap_content"
+    <fragment android:id="@+id/autocomplete_fragment"
+        android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:layout_weight="0.5"
-        android:text="Find Uber"
-        tools:ignore="OnClick" />
+        android:name="com.google.android.libraries.places.widget.AutocompleteSupportFragment"
+        />
 
     <fragment
         android:id="@+id/map"
         android:name="com.google.android.gms.maps.SupportMapFragment"
         android:layout_width="match_parent"
         android:layout_height="526dp"
-        android:layout_below="@+id/searchbtn"
         android:layout_alignParentBottom="true"
-        android:layout_marginTop="4dp"
-        android:layout_marginBottom="25dp"
-        app:layout_constraintTop_toBottomOf="@id/searchbtn"
+        android:layout_marginTop="77dp"
+        android:layout_marginBottom="0dp"
+
         tools:context=".MapsActivity" />
 
 
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        maven {\r\n            url 'https://maven.google.com'\r\n        }\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.1.3'\r\n        classpath 'com.google.gms:google-services:4.3.5'\r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        \r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision 1e343c96754fb0f22357d139496c846c3ad36e78)
+++ build.gradle	(date 1620190539425)
@@ -9,7 +9,7 @@
         }
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:4.1.3'
+        classpath 'com.android.tools.build:gradle:4.2.0'
         classpath 'com.google.gms:google-services:4.3.5'
 
         // NOTE: Do not place your application dependencies here; they belong
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"RunConfigurationProducerService\">\r\n    <option name=\"ignoredProducers\">\r\n      <set>\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/runConfigurations.xml	(revision 1e343c96754fb0f22357d139496c846c3ad36e78)
+++ .idea/runConfigurations.xml	(date 1620190182929)
@@ -3,6 +3,7 @@
   <component name="RunConfigurationProducerService">
     <option name="ignoredProducers">
       <set>
+        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"Android API 29 Platform\" project-jdk-type=\"Android SDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 1e343c96754fb0f22357d139496c846c3ad36e78)
+++ .idea/misc.xml	(date 1620190182913)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="Android API 29 Platform" project-jdk-type="Android SDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="false" project-jdk-name="Android API 29 Platform" project-jdk-type="Android SDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Sun May 02 10:04:50 ICT 2021\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.5-all.zip\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision 1e343c96754fb0f22357d139496c846c3ad36e78)
+++ gradle/wrapper/gradle-wrapper.properties	(date 1620190539359)
@@ -3,4 +3,4 @@
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-6.7.1-all.zip
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel target=\"1.8\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(revision 1e343c96754fb0f22357d139496c846c3ad36e78)
+++ .idea/compiler.xml	(date 1620190182920)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="1.8" />
+    <bytecodeTargetLevel target="11" />
   </component>
 </project>
\ No newline at end of file
